
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-leftELLIPSISleft*/nonassocIFrightUMINUSABS DOUBLE_EQ DQ_STRING ELLIPSIS ELSE FOR GREATER_EQ IF IN LESS_EQ LET MAX MIN NAME NOT_EQ NUMBER PRINT READLINE SQ_STRING VAR WHILEprogram : statement_liststatement_list : statement_list statementstatement_list : statementfor : FOR for_assign IN expression statement_blockfor : WHILE expression statement_blockstatement : assignassign : LET NAME '=' expressionassign : VAR NAME '=' expressionassign : NAME '=' expressionstatement_block : '{' statement_list '}'for_assign : NAMEstatement_block : statementstatement : printstatement : expressionstatement : forprint : PRINT '(' print_expression_list ')' print : PRINT '(' expression ')' expression : READLINE '(' ')'expression : MIN '(' expression ',' expression ')'expression : MAX '(' expression ',' expression ')'expression : ABS '(' expression ')'expression : '-' expression %prec UMINUSexpression : expression '+' expression\n                  | expression '-' expression\n                  | expression '*' expression\n                  | expression '/' expression\n                  | expression '%' expressionexpression : expression ELLIPSIS expressionexpression : NUMBERexpression : NAMEexpression : DQ_STRINGexpression : SQ_STRINGexpression : '(' expression ')'expression : expression DOUBLE_EQ expression \n                 | expression NOT_EQ expression\n                 | expression '>' expression\n                 | expression '<' expression\n                 | expression LESS_EQ expression\n                 | expression GREATER_EQ expression\n                   statement : IF  expression '{' statement_block '}'statement : IF expression '{' statement '}' ELSE '{' statement_block '}'print_expression_list : print_expression_list : print_expression_list print_expressionprint_expression_list : print_expressionprint_expression : expression ',' "
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,10,19,20,21,24,38,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,71,72,77,79,80,83,84,85,88,92,93,94,95,96,100,101,103,104,105,107,],[8,8,-3,-6,-13,-14,-15,-30,-29,-31,-32,-2,-30,-22,8,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,8,-9,-33,-18,-5,8,-12,-7,-8,-16,-17,-21,8,-22,8,-40,-4,-10,-19,-20,8,-41,]),'LET':([0,2,3,4,5,6,7,10,19,20,21,24,38,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,71,72,77,79,80,83,84,85,88,92,93,94,95,96,100,101,103,104,105,107,],[9,9,-3,-6,-13,-14,-15,-30,-29,-31,-32,-2,-30,-22,9,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,9,-9,-33,-18,-5,9,-12,-7,-8,-16,-17,-21,9,-22,9,-40,-4,-10,-19,-20,9,-41,]),'VAR':([0,2,3,4,5,6,7,10,19,20,21,24,38,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,71,72,77,79,80,83,84,85,88,92,93,94,95,96,100,101,103,104,105,107,],[11,11,-3,-6,-13,-14,-15,-30,-29,-31,-32,-2,-30,-22,11,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,11,-9,-33,-18,-5,11,-12,-7,-8,-16,-17,-21,11,-22,11,-40,-4,-10,-19,-20,11,-41,]),'NAME':([0,2,3,4,5,6,7,8,9,10,11,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,42,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,76,77,78,79,80,83,84,85,86,88,89,90,91,92,93,94,95,96,100,101,103,104,105,107,],[10,10,-3,-6,-13,-14,-15,38,39,-30,41,38,38,-29,-31,-32,50,38,-2,38,38,38,38,38,38,38,38,38,38,38,38,-30,38,38,38,38,38,-22,10,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,10,38,-9,38,38,-44,-33,-18,38,-5,38,10,-12,-7,-8,-16,-43,-17,-45,38,38,-21,10,-22,10,-40,-4,-10,-19,-20,10,-41,]),'PRINT':([0,2,3,4,5,6,7,10,19,20,21,24,38,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,71,72,77,79,80,83,84,85,88,92,93,94,95,96,100,101,103,104,105,107,],[12,12,-3,-6,-13,-14,-15,-30,-29,-31,-32,-2,-30,-22,12,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,12,-9,-33,-18,-5,12,-12,-7,-8,-16,-17,-21,12,-22,12,-40,-4,-10,-19,-20,12,-41,]),'READLINE':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,42,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,76,77,78,79,80,83,84,85,86,88,89,90,91,92,93,94,95,96,100,101,103,104,105,107,],[14,14,-3,-6,-13,-14,-15,14,-30,14,14,-29,-31,-32,14,-2,14,14,14,14,14,14,14,14,14,14,14,14,-30,14,14,14,14,14,-22,14,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,14,14,-9,14,14,-44,-33,-18,14,-5,14,14,-12,-7,-8,-16,-43,-17,-45,14,14,-21,14,-22,14,-40,-4,-10,-19,-20,14,-41,]),'MIN':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,42,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,76,77,78,79,80,83,84,85,86,88,89,90,91,92,93,94,95,96,100,101,103,104,105,107,],[15,15,-3,-6,-13,-14,-15,15,-30,15,15,-29,-31,-32,15,-2,15,15,15,15,15,15,15,15,15,15,15,15,-30,15,15,15,15,15,-22,15,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,15,15,-9,15,15,-44,-33,-18,15,-5,15,15,-12,-7,-8,-16,-43,-17,-45,15,15,-21,15,-22,15,-40,-4,-10,-19,-20,15,-41,]),'MAX':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,42,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,76,77,78,79,80,83,84,85,86,88,89,90,91,92,93,94,95,96,100,101,103,104,105,107,],[16,16,-3,-6,-13,-14,-15,16,-30,16,16,-29,-31,-32,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,-30,16,16,16,16,16,-22,16,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,16,16,-9,16,16,-44,-33,-18,16,-5,16,16,-12,-7,-8,-16,-43,-17,-45,16,16,-21,16,-22,16,-40,-4,-10,-19,-20,16,-41,]),'ABS':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,42,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,76,77,78,79,80,83,84,85,86,88,89,90,91,92,93,94,95,96,100,101,103,104,105,107,],[17,17,-3,-6,-13,-14,-15,17,-30,17,17,-29,-31,-32,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,-30,17,17,17,17,17,-22,17,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,17,17,-9,17,17,-44,-33,-18,17,-5,17,17,-12,-7,-8,-16,-43,-17,-45,17,17,-21,17,-22,17,-40,-4,-10,-19,-20,17,-41,]),'-':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,42,43,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,103,104,105,107,],[18,18,-3,-6,-13,26,-15,18,-30,18,18,-29,-31,-32,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,26,-30,18,18,26,18,18,18,-22,78,-23,-24,-25,-26,26,-28,26,26,26,26,26,26,18,18,26,18,18,26,-44,-33,-18,26,26,26,18,-5,18,18,-12,26,26,-16,-43,26,-17,-45,18,18,-21,78,-22,18,-40,26,26,-4,-10,-19,-20,18,-41,]),'NUMBER':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,42,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,76,77,78,79,80,83,84,85,86,88,89,90,91,92,93,94,95,96,100,101,103,104,105,107,],[19,19,-3,-6,-13,-14,-15,19,-30,19,19,-29,-31,-32,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,-30,19,19,19,19,19,-22,19,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,19,19,-9,19,19,-44,-33,-18,19,-5,19,19,-12,-7,-8,-16,-43,-17,-45,19,19,-21,19,-22,19,-40,-4,-10,-19,-20,19,-41,]),'DQ_STRING':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,42,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,76,77,78,79,80,83,84,85,86,88,89,90,91,92,93,94,95,96,100,101,103,104,105,107,],[20,20,-3,-6,-13,-14,-15,20,-30,20,20,-29,-31,-32,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,-30,20,20,20,20,20,-22,20,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,20,20,-9,20,20,-44,-33,-18,20,-5,20,20,-12,-7,-8,-16,-43,-17,-45,20,20,-21,20,-22,20,-40,-4,-10,-19,-20,20,-41,]),'SQ_STRING':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,42,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,76,77,78,79,80,83,84,85,86,88,89,90,91,92,93,94,95,96,100,101,103,104,105,107,],[21,21,-3,-6,-13,-14,-15,21,-30,21,21,-29,-31,-32,21,-2,21,21,21,21,21,21,21,21,21,21,21,21,-30,21,21,21,21,21,-22,21,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,21,21,-9,21,21,-44,-33,-18,21,-5,21,21,-12,-7,-8,-16,-43,-17,-45,21,21,-21,21,-22,21,-40,-4,-10,-19,-20,21,-41,]),'(':([0,2,3,4,5,6,7,8,10,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,42,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,76,77,78,79,80,83,84,85,86,88,89,90,91,92,93,94,95,96,100,101,103,104,105,107,],[13,13,-3,-6,-13,-14,-15,13,-30,42,13,44,45,46,47,13,-29,-31,-32,13,-2,13,13,13,13,13,13,13,13,13,13,13,13,-30,13,13,13,13,13,-22,13,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,13,13,-9,13,13,-44,-33,-18,13,-5,13,13,-12,-7,-8,-16,-43,-17,-45,13,13,-21,13,-22,13,-40,-4,-10,-19,-20,13,-41,]),'FOR':([0,2,3,4,5,6,7,10,19,20,21,24,38,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,71,72,77,79,80,83,84,85,88,92,93,94,95,96,100,101,103,104,105,107,],[22,22,-3,-6,-13,-14,-15,-30,-29,-31,-32,-2,-30,-22,22,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,22,-9,-33,-18,-5,22,-12,-7,-8,-16,-17,-21,22,-22,22,-40,-4,-10,-19,-20,22,-41,]),'WHILE':([0,2,3,4,5,6,7,10,19,20,21,24,38,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,71,72,77,79,80,83,84,85,88,92,93,94,95,96,100,101,103,104,105,107,],[23,23,-3,-6,-13,-14,-15,-30,-29,-31,-32,-2,-30,-22,23,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,23,-9,-33,-18,-5,23,-12,-7,-8,-16,-17,-21,23,-22,23,-40,-4,-10,-19,-20,23,-41,]),'$end':([1,2,3,4,5,6,7,10,19,20,21,24,38,48,52,53,54,55,56,57,58,59,60,61,62,63,66,71,72,77,80,83,84,85,88,92,94,96,100,101,103,104,107,],[0,-1,-3,-6,-13,-14,-15,-30,-29,-31,-32,-2,-30,-22,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,-9,-33,-18,-5,-12,-7,-8,-16,-17,-21,-22,-40,-4,-10,-19,-20,-41,]),'}':([3,4,5,6,7,10,19,20,21,24,38,48,52,53,54,55,56,57,58,59,60,61,62,63,66,71,72,77,80,81,82,83,84,85,88,92,94,95,96,100,101,103,104,106,107,],[-3,-6,-13,-14,-15,-30,-29,-31,-32,-2,-30,-22,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,-9,-33,-18,-5,-12,96,97,-7,-8,-16,-17,-21,-22,101,-40,-4,-10,-19,-20,107,-41,]),'+':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[25,-30,-29,-31,-32,25,-30,25,-22,25,-23,-24,-25,-26,25,-28,25,25,25,25,25,25,25,25,-33,-18,25,25,25,25,25,25,-21,25,-22,25,25,-19,-20,]),'*':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[27,-30,-29,-31,-32,27,-30,27,-22,27,27,27,-25,-26,27,27,27,27,27,27,27,27,27,27,-33,-18,27,27,27,27,27,27,-21,27,-22,27,27,-19,-20,]),'/':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[28,-30,-29,-31,-32,28,-30,28,-22,28,28,28,-25,-26,28,28,28,28,28,28,28,28,28,28,-33,-18,28,28,28,28,28,28,-21,28,-22,28,28,-19,-20,]),'%':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[29,-30,-29,-31,-32,29,-30,29,-22,29,-23,-24,-25,-26,29,-28,29,29,29,29,29,29,29,29,-33,-18,29,29,29,29,29,29,-21,29,-22,29,29,-19,-20,]),'ELLIPSIS':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[30,-30,-29,-31,-32,30,-30,30,-22,30,30,30,-25,-26,30,-28,30,30,30,30,30,30,30,30,-33,-18,30,30,30,30,30,30,-21,30,-22,30,30,-19,-20,]),'DOUBLE_EQ':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[31,-30,-29,-31,-32,31,-30,31,-22,31,-23,-24,-25,-26,31,-28,31,31,31,31,31,31,31,31,-33,-18,31,31,31,31,31,31,-21,31,-22,31,31,-19,-20,]),'NOT_EQ':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[32,-30,-29,-31,-32,32,-30,32,-22,32,-23,-24,-25,-26,32,-28,32,32,32,32,32,32,32,32,-33,-18,32,32,32,32,32,32,-21,32,-22,32,32,-19,-20,]),'>':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[33,-30,-29,-31,-32,33,-30,33,-22,33,-23,-24,-25,-26,33,-28,33,33,33,33,33,33,33,33,-33,-18,33,33,33,33,33,33,-21,33,-22,33,33,-19,-20,]),'<':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[34,-30,-29,-31,-32,34,-30,34,-22,34,-23,-24,-25,-26,34,-28,34,34,34,34,34,34,34,34,-33,-18,34,34,34,34,34,34,-21,34,-22,34,34,-19,-20,]),'LESS_EQ':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[35,-30,-29,-31,-32,35,-30,35,-22,35,-23,-24,-25,-26,35,-28,35,35,35,35,35,35,35,35,-33,-18,35,35,35,35,35,35,-21,35,-22,35,35,-19,-20,]),'GREATER_EQ':([6,10,19,20,21,37,38,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,83,84,87,92,93,94,98,99,103,104,],[36,-30,-29,-31,-32,36,-30,36,-22,36,-23,-24,-25,-26,36,-28,36,36,36,36,36,36,36,36,-33,-18,36,36,36,36,36,36,-21,36,-22,36,36,-19,-20,]),'=':([10,39,41,],[40,65,67,]),'{':([19,20,21,37,38,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,71,72,92,93,94,102,103,104,105,],[-29,-31,-32,64,-30,-22,79,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,79,-33,-18,-21,79,-24,105,-19,-20,79,]),')':([19,20,21,38,42,43,44,48,52,53,54,55,56,57,58,59,60,61,62,63,68,69,70,71,72,75,86,89,92,98,99,103,104,],[-29,-31,-32,-30,-42,71,72,-22,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,85,88,-44,-33,-18,92,-43,-45,-21,103,104,-19,-20,]),',':([19,20,21,38,48,52,53,54,55,56,57,58,59,60,61,62,63,69,71,72,73,74,87,92,103,104,],[-29,-31,-32,-30,-22,-23,-24,-25,-26,-27,-28,-34,-35,-36,-37,-38,-39,89,-33,-18,90,91,89,-21,-19,-20,]),'IN':([49,50,],[76,-11,]),'ELSE':([97,],[102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,79,],[2,95,]),'statement':([0,2,51,64,79,93,95,105,],[3,24,80,82,3,80,24,80,]),'assign':([0,2,51,64,79,93,95,105,],[4,4,4,4,4,4,4,4,]),'print':([0,2,51,64,79,93,95,105,],[5,5,5,5,5,5,5,5,]),'expression':([0,2,8,13,18,23,25,26,27,28,29,30,31,32,33,34,35,36,40,42,45,46,47,51,64,65,67,68,76,78,79,90,91,93,95,105,],[6,6,37,43,48,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,73,74,75,6,6,83,84,87,93,94,6,98,99,6,6,6,]),'for':([0,2,51,64,79,93,95,105,],[7,7,7,7,7,7,7,7,]),'for_assign':([22,],[49,]),'print_expression_list':([42,],[68,]),'print_expression':([42,68,],[70,86,]),'statement_block':([51,64,93,105,],[77,81,100,106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_PROGRAM','main.py',133),
  ('statement_list -> statement_list statement','statement_list',2,'p_STATEMENT_LIST2','main.py',138),
  ('statement_list -> statement','statement_list',1,'p_STATEMENT_LIST','main.py',142),
  ('for -> FOR for_assign IN expression statement_block','for',5,'p_FOR','main.py',146),
  ('for -> WHILE expression statement_block','for',3,'p_WHILE','main.py',152),
  ('statement -> assign','statement',1,'p_STATEMENT_ASSIGN','main.py',158),
  ('assign -> LET NAME = expression','assign',4,'p_LET_ASSIGN','main.py',162),
  ('assign -> VAR NAME = expression','assign',4,'p_VAR_ASSIGN','main.py',168),
  ('assign -> NAME = expression','assign',3,'p_REASSIGN','main.py',175),
  ('statement_block -> { statement_list }','statement_block',3,'p_STATEMENT_BLOCK','main.py',180),
  ('for_assign -> NAME','for_assign',1,'p_FOR_ASSIGN','main.py',184),
  ('statement_block -> statement','statement_block',1,'p_STATEMENT_BLOCK2','main.py',191),
  ('statement -> print','statement',1,'p_STATEMENT_PRINT','main.py',195),
  ('statement -> expression','statement',1,'p_STATEMENT_COMPARISON','main.py',199),
  ('statement -> for','statement',1,'p_STATEMENT_FOR','main.py',203),
  ('print -> PRINT ( print_expression_list )','print',4,'p_PRINT_STATEMENT','main.py',207),
  ('print -> PRINT ( expression )','print',4,'p_PRINT_STATEMENT2','main.py',211),
  ('expression -> READLINE ( )','expression',3,'p_EXPRESSION_INPUT','main.py',215),
  ('expression -> MIN ( expression , expression )','expression',6,'p_EXPRESSION_MIN','main.py',219),
  ('expression -> MAX ( expression , expression )','expression',6,'p_EXPRESSION_MAX','main.py',223),
  ('expression -> ABS ( expression )','expression',4,'p_EXPRESSION_ABS','main.py',227),
  ('expression -> - expression','expression',2,'p_EXPRESSION_UMINUS','main.py',231),
  ('expression -> expression + expression','expression',3,'p_EXPRESSION_BINOP','main.py',235),
  ('expression -> expression - expression','expression',3,'p_EXPRESSION_BINOP','main.py',236),
  ('expression -> expression * expression','expression',3,'p_EXPRESSION_BINOP','main.py',237),
  ('expression -> expression / expression','expression',3,'p_EXPRESSION_BINOP','main.py',238),
  ('expression -> expression % expression','expression',3,'p_EXPRESSION_BINOP','main.py',239),
  ('expression -> expression ELLIPSIS expression','expression',3,'p_EXPRESSION_RANGE','main.py',243),
  ('expression -> NUMBER','expression',1,'p_EXPRESSION_NUM','main.py',247),
  ('expression -> NAME','expression',1,'p_EXPRESSION_NAME','main.py',251),
  ('expression -> DQ_STRING','expression',1,'p_EXPRESSION_DQ_STRING','main.py',258),
  ('expression -> SQ_STRING','expression',1,'p_EXPRESSION_SQ_STRING','main.py',262),
  ('expression -> ( expression )','expression',3,'p_EXPRESSION_GROUP','main.py',266),
  ('expression -> expression DOUBLE_EQ expression','expression',3,'p_EXPRESSION_COMPARE','main.py',270),
  ('expression -> expression NOT_EQ expression','expression',3,'p_EXPRESSION_COMPARE','main.py',271),
  ('expression -> expression > expression','expression',3,'p_EXPRESSION_COMPARE','main.py',272),
  ('expression -> expression < expression','expression',3,'p_EXPRESSION_COMPARE','main.py',273),
  ('expression -> expression LESS_EQ expression','expression',3,'p_EXPRESSION_COMPARE','main.py',274),
  ('expression -> expression GREATER_EQ expression','expression',3,'p_EXPRESSION_COMPARE','main.py',275),
  ('statement -> IF expression { statement_block }','statement',5,'p_IF_CONDITIONAL','main.py',282),
  ('statement -> IF expression { statement } ELSE { statement_block }','statement',9,'p_IF_ELSE_CONDITIONAL','main.py',288),
  ('print_expression_list -> <empty>','print_expression_list',0,'p_EMPTY_PRINT_LIST','main.py',294),
  ('print_expression_list -> print_expression_list print_expression','print_expression_list',2,'p_PRINT_EXPRESSION_LIST','main.py',298),
  ('print_expression_list -> print_expression','print_expression_list',1,'p_PRINT_EXPRESSION_LIST2','main.py',302),
  ('print_expression -> expression ,','print_expression',2,'p_PRINT_EXPRESSION','main.py',306),
]
