
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-leftELLIPSISleft*/nonassocIFrightUMINUSABS DOUBLE_EQ DQ_STRING ELLIPSIS ELSE FOR GREATER_EQ IF IN LESS_EQ LET MAX MIN NAME NOT_EQ NUMBER POWER PRINT READLINE SQ_STRING VAR WHILEprogram : statement_liststatement_list : statement_list statementstatement_list : statementfor : FOR for_assign IN expression statement_blockfor : WHILE expression statement_blockstatement : assignassign : LET NAME '=' expressionassign : VAR NAME '=' expressionassign : NAME '=' expressionstatement_block : '{' statement_list '}'for_assign : NAMEstatement_block : statementstatement : printstatement : expressionstatement : forprint : PRINT '(' print_expression_list ')' print : PRINT '(' expression ')' expression : READLINE '(' ')'expression : MIN '(' expression ',' expression ')'expression : MAX '(' expression ',' expression ')'expression : ABS '(' expression ')'expression : expression POWER expressionexpression : '-' expression %prec UMINUSexpression : expression '+' expression\n                  | expression '-' expression\n                  | expression '*' expression\n                  | expression '/' expression\n                  | expression '%' expressionexpression : expression ELLIPSIS expressionexpression : NUMBERexpression : NAMEexpression : DQ_STRINGexpression : SQ_STRINGexpression : '(' expression ')'expression : expression DOUBLE_EQ expression \n                 | expression NOT_EQ expression\n                 | expression '>' expression\n                 | expression '<' expression\n                 | expression LESS_EQ expression\n                 | expression GREATER_EQ expression\n                   statement : IF  expression '{' statement_block '}'statement : IF expression '{' statement '}' ELSE '{' statement_block '}'print_expression_list : print_expression_list : print_expression_list print_expressionprint_expression_list : print_expressionprint_expression : expression ',' "
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,10,19,20,21,24,39,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,73,74,79,81,82,85,86,87,90,94,95,96,97,98,102,103,105,106,107,109,],[8,8,-3,-6,-13,-14,-15,-31,-30,-32,-33,-2,-31,-23,8,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,8,-9,-34,-18,-5,8,-12,-7,-8,-16,-17,-21,8,-23,8,-41,-4,-10,-19,-20,8,-42,]),'LET':([0,2,3,4,5,6,7,10,19,20,21,24,39,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,73,74,79,81,82,85,86,87,90,94,95,96,97,98,102,103,105,106,107,109,],[9,9,-3,-6,-13,-14,-15,-31,-30,-32,-33,-2,-31,-23,9,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,9,-9,-34,-18,-5,9,-12,-7,-8,-16,-17,-21,9,-23,9,-41,-4,-10,-19,-20,9,-42,]),'VAR':([0,2,3,4,5,6,7,10,19,20,21,24,39,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,73,74,79,81,82,85,86,87,90,94,95,96,97,98,102,103,105,106,107,109,],[11,11,-3,-6,-13,-14,-15,-31,-30,-32,-33,-2,-31,-23,11,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,11,-9,-34,-18,-5,11,-12,-7,-8,-16,-17,-21,11,-23,11,-41,-4,-10,-19,-20,11,-42,]),'NAME':([0,2,3,4,5,6,7,8,9,10,11,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,78,79,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,102,103,105,106,107,109,],[10,10,-3,-6,-13,-14,-15,39,40,-31,42,39,39,-30,-32,-33,51,39,-2,39,39,39,39,39,39,39,39,39,39,39,39,39,-31,39,39,39,39,39,-23,10,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,10,39,-9,39,39,-45,-34,-18,39,-5,39,10,-12,-7,-8,-16,-44,-17,-46,39,39,-21,10,-23,10,-41,-4,-10,-19,-20,10,-42,]),'PRINT':([0,2,3,4,5,6,7,10,19,20,21,24,39,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,73,74,79,81,82,85,86,87,90,94,95,96,97,98,102,103,105,106,107,109,],[12,12,-3,-6,-13,-14,-15,-31,-30,-32,-33,-2,-31,-23,12,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,12,-9,-34,-18,-5,12,-12,-7,-8,-16,-17,-21,12,-23,12,-41,-4,-10,-19,-20,12,-42,]),'READLINE':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,78,79,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,102,103,105,106,107,109,],[14,14,-3,-6,-13,-14,-15,14,-31,14,14,-30,-32,-33,14,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,-31,14,14,14,14,14,-23,14,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,14,14,-9,14,14,-45,-34,-18,14,-5,14,14,-12,-7,-8,-16,-44,-17,-46,14,14,-21,14,-23,14,-41,-4,-10,-19,-20,14,-42,]),'MIN':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,78,79,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,102,103,105,106,107,109,],[15,15,-3,-6,-13,-14,-15,15,-31,15,15,-30,-32,-33,15,-2,15,15,15,15,15,15,15,15,15,15,15,15,15,-31,15,15,15,15,15,-23,15,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,15,15,-9,15,15,-45,-34,-18,15,-5,15,15,-12,-7,-8,-16,-44,-17,-46,15,15,-21,15,-23,15,-41,-4,-10,-19,-20,15,-42,]),'MAX':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,78,79,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,102,103,105,106,107,109,],[16,16,-3,-6,-13,-14,-15,16,-31,16,16,-30,-32,-33,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,-31,16,16,16,16,16,-23,16,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,16,16,-9,16,16,-45,-34,-18,16,-5,16,16,-12,-7,-8,-16,-44,-17,-46,16,16,-21,16,-23,16,-41,-4,-10,-19,-20,16,-42,]),'ABS':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,78,79,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,102,103,105,106,107,109,],[17,17,-3,-6,-13,-14,-15,17,-31,17,17,-30,-32,-33,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,-31,17,17,17,17,17,-23,17,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,17,17,-9,17,17,-45,-34,-18,17,-5,17,17,-12,-7,-8,-16,-44,-17,-46,17,17,-21,17,-23,17,-41,-4,-10,-19,-20,17,-42,]),'-':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,44,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,105,106,107,109,],[18,18,-3,-6,-13,27,-15,18,-31,18,18,-30,-32,-33,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,27,-31,18,18,27,18,18,18,-23,80,27,-24,-25,-26,-27,27,-29,27,27,27,27,27,27,18,18,27,18,18,27,-45,-34,-18,27,27,27,18,-5,18,18,-12,27,27,-16,-44,27,-17,-46,18,18,-21,80,-23,18,-41,27,27,-4,-10,-19,-20,18,-42,]),'NUMBER':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,78,79,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,102,103,105,106,107,109,],[19,19,-3,-6,-13,-14,-15,19,-31,19,19,-30,-32,-33,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,-31,19,19,19,19,19,-23,19,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,19,19,-9,19,19,-45,-34,-18,19,-5,19,19,-12,-7,-8,-16,-44,-17,-46,19,19,-21,19,-23,19,-41,-4,-10,-19,-20,19,-42,]),'DQ_STRING':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,78,79,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,102,103,105,106,107,109,],[20,20,-3,-6,-13,-14,-15,20,-31,20,20,-30,-32,-33,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,-31,20,20,20,20,20,-23,20,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,20,20,-9,20,20,-45,-34,-18,20,-5,20,20,-12,-7,-8,-16,-44,-17,-46,20,20,-21,20,-23,20,-41,-4,-10,-19,-20,20,-42,]),'SQ_STRING':([0,2,3,4,5,6,7,8,10,13,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,78,79,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,102,103,105,106,107,109,],[21,21,-3,-6,-13,-14,-15,21,-31,21,21,-30,-32,-33,21,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,-31,21,21,21,21,21,-23,21,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,21,21,-9,21,21,-45,-34,-18,21,-5,21,21,-12,-7,-8,-16,-44,-17,-46,21,21,-21,21,-23,21,-41,-4,-10,-19,-20,21,-42,]),'(':([0,2,3,4,5,6,7,8,10,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,78,79,80,81,82,85,86,87,88,90,91,92,93,94,95,96,97,98,102,103,105,106,107,109,],[13,13,-3,-6,-13,-14,-15,13,-31,43,13,45,46,47,48,13,-30,-32,-33,13,-2,13,13,13,13,13,13,13,13,13,13,13,13,13,-31,13,13,13,13,13,-23,13,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,13,13,-9,13,13,-45,-34,-18,13,-5,13,13,-12,-7,-8,-16,-44,-17,-46,13,13,-21,13,-23,13,-41,-4,-10,-19,-20,13,-42,]),'FOR':([0,2,3,4,5,6,7,10,19,20,21,24,39,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,73,74,79,81,82,85,86,87,90,94,95,96,97,98,102,103,105,106,107,109,],[22,22,-3,-6,-13,-14,-15,-31,-30,-32,-33,-2,-31,-23,22,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,22,-9,-34,-18,-5,22,-12,-7,-8,-16,-17,-21,22,-23,22,-41,-4,-10,-19,-20,22,-42,]),'WHILE':([0,2,3,4,5,6,7,10,19,20,21,24,39,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,73,74,79,81,82,85,86,87,90,94,95,96,97,98,102,103,105,106,107,109,],[23,23,-3,-6,-13,-14,-15,-31,-30,-32,-33,-2,-31,-23,23,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,23,-9,-34,-18,-5,23,-12,-7,-8,-16,-17,-21,23,-23,23,-41,-4,-10,-19,-20,23,-42,]),'$end':([1,2,3,4,5,6,7,10,19,20,21,24,39,49,53,54,55,56,57,58,59,60,61,62,63,64,65,68,73,74,79,82,85,86,87,90,94,96,98,102,103,105,106,109,],[0,-1,-3,-6,-13,-14,-15,-31,-30,-32,-33,-2,-31,-23,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-9,-34,-18,-5,-12,-7,-8,-16,-17,-21,-23,-41,-4,-10,-19,-20,-42,]),'}':([3,4,5,6,7,10,19,20,21,24,39,49,53,54,55,56,57,58,59,60,61,62,63,64,65,68,73,74,79,82,83,84,85,86,87,90,94,96,97,98,102,103,105,106,108,109,],[-3,-6,-13,-14,-15,-31,-30,-32,-33,-2,-31,-23,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-9,-34,-18,-5,-12,98,99,-7,-8,-16,-17,-21,-23,103,-41,-4,-10,-19,-20,109,-42,]),'POWER':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[25,-31,-30,-32,-33,25,-31,25,-23,25,25,-24,-25,-26,-27,25,-29,25,25,25,25,25,25,25,25,-34,-18,25,25,25,25,25,25,-21,25,-23,25,25,-19,-20,]),'+':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[26,-31,-30,-32,-33,26,-31,26,-23,26,26,-24,-25,-26,-27,26,-29,26,26,26,26,26,26,26,26,-34,-18,26,26,26,26,26,26,-21,26,-23,26,26,-19,-20,]),'*':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[28,-31,-30,-32,-33,28,-31,28,-23,28,28,28,28,-26,-27,28,28,28,28,28,28,28,28,28,28,-34,-18,28,28,28,28,28,28,-21,28,-23,28,28,-19,-20,]),'/':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[29,-31,-30,-32,-33,29,-31,29,-23,29,29,29,29,-26,-27,29,29,29,29,29,29,29,29,29,29,-34,-18,29,29,29,29,29,29,-21,29,-23,29,29,-19,-20,]),'%':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[30,-31,-30,-32,-33,30,-31,30,-23,30,30,-24,-25,-26,-27,30,-29,30,30,30,30,30,30,30,30,-34,-18,30,30,30,30,30,30,-21,30,-23,30,30,-19,-20,]),'ELLIPSIS':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[31,-31,-30,-32,-33,31,-31,31,-23,31,31,31,31,-26,-27,31,-29,31,31,31,31,31,31,31,31,-34,-18,31,31,31,31,31,31,-21,31,-23,31,31,-19,-20,]),'DOUBLE_EQ':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[32,-31,-30,-32,-33,32,-31,32,-23,32,32,-24,-25,-26,-27,32,-29,32,32,32,32,32,32,32,32,-34,-18,32,32,32,32,32,32,-21,32,-23,32,32,-19,-20,]),'NOT_EQ':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[33,-31,-30,-32,-33,33,-31,33,-23,33,33,-24,-25,-26,-27,33,-29,33,33,33,33,33,33,33,33,-34,-18,33,33,33,33,33,33,-21,33,-23,33,33,-19,-20,]),'>':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[34,-31,-30,-32,-33,34,-31,34,-23,34,34,-24,-25,-26,-27,34,-29,34,34,34,34,34,34,34,34,-34,-18,34,34,34,34,34,34,-21,34,-23,34,34,-19,-20,]),'<':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[35,-31,-30,-32,-33,35,-31,35,-23,35,35,-24,-25,-26,-27,35,-29,35,35,35,35,35,35,35,35,-34,-18,35,35,35,35,35,35,-21,35,-23,35,35,-19,-20,]),'LESS_EQ':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[36,-31,-30,-32,-33,36,-31,36,-23,36,36,-24,-25,-26,-27,36,-29,36,36,36,36,36,36,36,36,-34,-18,36,36,36,36,36,36,-21,36,-23,36,36,-19,-20,]),'GREATER_EQ':([6,10,19,20,21,38,39,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,73,74,75,76,77,85,86,89,94,95,96,100,101,105,106,],[37,-31,-30,-32,-33,37,-31,37,-23,37,37,-24,-25,-26,-27,37,-29,37,37,37,37,37,37,37,37,-34,-18,37,37,37,37,37,37,-21,37,-23,37,37,-19,-20,]),'=':([10,40,42,],[41,67,69,]),'{':([19,20,21,38,39,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,73,74,94,95,96,104,105,106,107,],[-30,-32,-33,66,-31,-23,81,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,81,-34,-18,-21,81,-25,107,-19,-20,81,]),')':([19,20,21,39,43,44,45,49,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,73,74,77,88,91,94,100,101,105,106,],[-30,-32,-33,-31,-43,73,74,-23,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,87,90,-45,-34,-18,94,-44,-46,-21,105,106,-19,-20,]),',':([19,20,21,39,49,53,54,55,56,57,58,59,60,61,62,63,64,65,71,73,74,75,76,89,94,105,106,],[-30,-32,-33,-31,-23,-22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,91,-34,-18,92,93,91,-21,-19,-20,]),'IN':([50,51,],[78,-11,]),'ELSE':([99,],[104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,81,],[2,97,]),'statement':([0,2,52,66,81,95,97,107,],[3,24,82,84,3,82,24,82,]),'assign':([0,2,52,66,81,95,97,107,],[4,4,4,4,4,4,4,4,]),'print':([0,2,52,66,81,95,97,107,],[5,5,5,5,5,5,5,5,]),'expression':([0,2,8,13,18,23,25,26,27,28,29,30,31,32,33,34,35,36,37,41,43,46,47,48,52,66,67,69,70,78,80,81,92,93,95,97,107,],[6,6,38,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,71,75,76,77,6,6,85,86,89,95,96,6,100,101,6,6,6,]),'for':([0,2,52,66,81,95,97,107,],[7,7,7,7,7,7,7,7,]),'for_assign':([22,],[50,]),'print_expression_list':([43,],[70,]),'print_expression':([43,70,],[72,88,]),'statement_block':([52,66,95,107,],[79,83,102,108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_PROGRAM','main.py',138),
  ('statement_list -> statement_list statement','statement_list',2,'p_STATEMENT_LIST2','main.py',143),
  ('statement_list -> statement','statement_list',1,'p_STATEMENT_LIST','main.py',147),
  ('for -> FOR for_assign IN expression statement_block','for',5,'p_FOR','main.py',151),
  ('for -> WHILE expression statement_block','for',3,'p_WHILE','main.py',157),
  ('statement -> assign','statement',1,'p_STATEMENT_ASSIGN','main.py',163),
  ('assign -> LET NAME = expression','assign',4,'p_LET_ASSIGN','main.py',167),
  ('assign -> VAR NAME = expression','assign',4,'p_VAR_ASSIGN','main.py',174),
  ('assign -> NAME = expression','assign',3,'p_REASSIGN','main.py',181),
  ('statement_block -> { statement_list }','statement_block',3,'p_STATEMENT_BLOCK','main.py',186),
  ('for_assign -> NAME','for_assign',1,'p_FOR_ASSIGN','main.py',190),
  ('statement_block -> statement','statement_block',1,'p_STATEMENT_BLOCK2','main.py',197),
  ('statement -> print','statement',1,'p_STATEMENT_PRINT','main.py',201),
  ('statement -> expression','statement',1,'p_STATEMENT_COMPARISON','main.py',205),
  ('statement -> for','statement',1,'p_STATEMENT_FOR','main.py',209),
  ('print -> PRINT ( print_expression_list )','print',4,'p_PRINT_STATEMENT','main.py',213),
  ('print -> PRINT ( expression )','print',4,'p_PRINT_STATEMENT2','main.py',217),
  ('expression -> READLINE ( )','expression',3,'p_EXPRESSION_INPUT','main.py',221),
  ('expression -> MIN ( expression , expression )','expression',6,'p_EXPRESSION_MIN','main.py',227),
  ('expression -> MAX ( expression , expression )','expression',6,'p_EXPRESSION_MAX','main.py',233),
  ('expression -> ABS ( expression )','expression',4,'p_EXPRESSION_ABS','main.py',239),
  ('expression -> expression POWER expression','expression',3,'p_EXPRESSION_POWER','main.py',243),
  ('expression -> - expression','expression',2,'p_EXPRESSION_UMINUS','main.py',251),
  ('expression -> expression + expression','expression',3,'p_EXPRESSION_BINOP','main.py',257),
  ('expression -> expression - expression','expression',3,'p_EXPRESSION_BINOP','main.py',258),
  ('expression -> expression * expression','expression',3,'p_EXPRESSION_BINOP','main.py',259),
  ('expression -> expression / expression','expression',3,'p_EXPRESSION_BINOP','main.py',260),
  ('expression -> expression % expression','expression',3,'p_EXPRESSION_BINOP','main.py',261),
  ('expression -> expression ELLIPSIS expression','expression',3,'p_EXPRESSION_RANGE','main.py',267),
  ('expression -> NUMBER','expression',1,'p_EXPRESSION_NUM','main.py',273),
  ('expression -> NAME','expression',1,'p_EXPRESSION_NAME','main.py',282),
  ('expression -> DQ_STRING','expression',1,'p_EXPRESSION_DQ_STRING','main.py',289),
  ('expression -> SQ_STRING','expression',1,'p_EXPRESSION_SQ_STRING','main.py',293),
  ('expression -> ( expression )','expression',3,'p_EXPRESSION_GROUP','main.py',297),
  ('expression -> expression DOUBLE_EQ expression','expression',3,'p_EXPRESSION_COMPARE','main.py',301),
  ('expression -> expression NOT_EQ expression','expression',3,'p_EXPRESSION_COMPARE','main.py',302),
  ('expression -> expression > expression','expression',3,'p_EXPRESSION_COMPARE','main.py',303),
  ('expression -> expression < expression','expression',3,'p_EXPRESSION_COMPARE','main.py',304),
  ('expression -> expression LESS_EQ expression','expression',3,'p_EXPRESSION_COMPARE','main.py',305),
  ('expression -> expression GREATER_EQ expression','expression',3,'p_EXPRESSION_COMPARE','main.py',306),
  ('statement -> IF expression { statement_block }','statement',5,'p_IF_CONDITIONAL','main.py',315),
  ('statement -> IF expression { statement } ELSE { statement_block }','statement',9,'p_IF_ELSE_CONDITIONAL','main.py',321),
  ('print_expression_list -> <empty>','print_expression_list',0,'p_EMPTY_PRINT_LIST','main.py',327),
  ('print_expression_list -> print_expression_list print_expression','print_expression_list',2,'p_PRINT_EXPRESSION_LIST','main.py',331),
  ('print_expression_list -> print_expression','print_expression_list',1,'p_PRINT_EXPRESSION_LIST2','main.py',335),
  ('print_expression -> expression ,','print_expression',2,'p_PRINT_EXPRESSION','main.py',339),
]
